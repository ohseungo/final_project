<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="purchase">
    <resultMap type="Purchase" id="PurchaseResultMap">
        <id column="purchaseId" property="purchaseId"/>
        <result column="purchaseCount" property="purchaseCount"/>
        <result column="purchaseStatus" property="purchaseStatus"/>
        <result column="purchaseDate" property="purchaseDate"/>
        <result column="productId" property="productId"/>
        <result column="userId" property="userId"/>
        <result column="purchaseType" property="purchaseType"/>
        <result column="productValue" property="productValue"/>
        <result column="userName" property="userName"/>
        <result column="purchasePoint" property="purchasePoint"/>
    </resultMap>
    
    <insert id="insertPurchase" parameterType="Purchase">
    	insert into PURCHASE (purchaseId, purchaseCount, purchaseStatus, purchaseDate, productId,userId,
    	purchaseType, purchasePoint, compId, deliveryAddress,deliveryName, deliveryNumber) 
		VALUES (#{purchaseId}, #{purchaseCount}, #{purchaseStatus}, now(), #{productId},
		#{userId}, #{purchaseType}, #{purchasePoint}, #{compId}, #{deliveryAddress}, #{deliveryName}, #{deliveryNumber})
    </insert>
    
    <update id="updatePurchase" parameterType="Purchase">
		update PURCHASE 
		set	   purchaseCount=#{purchaseCount},purchaseStatus=#{purchaseStatus},purchaseDate=#{purchaseDate},productId=#{productId},
			   userId=#{userId},purchaseType=#{purchaseType},purchasePoint=#{purchasePoint},
			   compId=#{compId},deliveryAddress=#{deliveryAddress},deliveryName=#{deliveryName},deliveryNumber=#{deliveryNumber}
		where  purchaseId=#{purchaseId}
	</update>
<select id="selectPurchaseListWithMultipleCondition" parameterType="map" resultType="Purchase">
        select p.purchaseId, p.purchaseCount, u.userName, d.productName, p.purchaseDate, 
        	   p.purchaseType, d.productValue, p.purchasePoint ,p.deliveryAddress, p.purchaseStatus
        from purchase p, userinfo u, product d
        <where>
         p.userId=u.userId
         and
         p.productId=d.productId
        <if test="compId!=null">
            and p.compId=#{compId}
        </if>
        <if test="userId!=null">
            and u.userId=#{userId}
        </if>
        order by p.purchaseDate desc
        </where>
    </select>
   <select id="searchPurchaseList" parameterType="Purchase" resultType="Purchase">
      select p.purchaseId, p.purchaseCount, u.userName, d.productName, p.purchaseDate, p.purchaseType, 
      		 d.productValue, p.purchasePoint ,p.deliveryAddress, p.purchaseStatus
        from purchase p, userinfo u, product d
        <where>
         p.userId=u.userId
         and
         p.productId=d.productId
        <if test="compId!=null">
            and p.compId=#{compId}
        </if>
        <if test="purchaseId!=null and purchaseId!=''">
            and p.purchaseId=#{purchaseId}
        </if>
        <if test="userName!=null and userName!=''">
            and u.userName=#{userName}
        </if>
         <if test="purchaseStatus!=null and purchaseStatus!=-1">
            and p.purchaseStatus=#{purchaseStatus}
        </if>
        </where>
   </select>
</mapper>